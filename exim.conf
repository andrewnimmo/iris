######################################################################
#                    MAIN CONFIGURATION SETTINGS                     #
######################################################################

CONFDIR = {{exim_conf_dir}}

SMTP_OUTGOING_IP = 0.0.0.0
#SMTP_OUTGOING_IP = {{ip}}
LOCAL_INTERFACES = {{ip}} : 127.0.0.1
# additionally listen on port 80
# : 192.168.33.11.80
SMTP_HOSTS_AVOID_TLS = mail.msh.lv : ns2.msh.lv
HELO_DATA = {{fqdn}}
# Exim is not fast with large queue
# uncomment the line to push e-mails that failed delivery at first attempt
# to a more capable smarthost: Zmailer or Postfix, for example
#SMTP_SMARTHOST = mail2.domain.com::15

IMAP_SPOOL = /var/imap
EXIM_SPOOL = /var/spool/exim
EXIM_LOG = /var/log/exim

CLAMAV_MAX_MESSAGE_SIZE = 2m
SA_MAX_MESSAGE_SIZE = 200k

# host/db/user/password
MYSQL_SERVERS = "localhost(/tmp/mysql.sock)/mail/mail/{{mysql_mail_password}}"
MYSQL_DOMAIN = \
    select domain \
      from domains \
     where domain = '${quote_mysql:$domain}' \
       and non_local = 0
MYSQL_ALIAS = \
    select aliased_to \
      from aliases \
     where alias = '${quote_mysql:$local_part@$domain}'
MYSQL_ACCOUNT = \
    select account \
      from accounts \
     where account = '${quote_mysql:$local_part@$domain}'
MYSQL_SMTP_AUTH_PLAIN = \
    select pwd \
      from accounts \
     where account = '${quote_mysql:$2}' \
       and disabled = 0 \
       and smtp_auth = 1
MYSQL_SMTP_AUTH_LOGIN = \
    select pwd \
      from accounts \
     where account = '${quote_mysql:$1}' \
       and disabled = 0 \
       and smtp_auth = 1
MYSQL_OVERQUOTA = \
    select overquota \
      from accounts \
     where account = '${quote_mysql:$local_part@$domain}'
MYSQL_OVERQ_ALIAS = \
    select overquota \
      from accounts m, \
           aliases  a \
     where a.alias = '${quote_mysql:$local_part@$domain}' \
       and a.aliased_to = m.account
MYSQL_AV_DISABLED = \
    select av_disabled \
      from accounts \
     where account = '${quote_mysql:$local_part@$domain}'
MYSQL_VACATION_ENABLED = \
    select vacation \
      from accounts \
     where account = '${quote_mysql:$local_part@$domain}'
MYSQL_VACATION_TEXT = \
    select vacation_text \
      from accounts \
     where account =  '${quote_mysql:$local_part@$domain}'
VACATION_TEXT_DEFAULT =\
$h_from:,\n\n\
I'm on vacation.\n\n\
This is an automatic reply. Feel free to send additional\n\
mail, as only this one notice will be generated.\n\n

MYSQL_GREYLIST_TEST = \
    select case when now() - block_expires > 0 then 2 else 1 end \
      from greylist \
     where relay_ip = '${quote_mysql:${mask:$sender_host_address/24}}' \
       and from_domain = '${quote_mysql:$sender_address_domain}' \
     limit 1
MYSQL_GREYLIST_ADD = \
    insert into greylist \
        (relay_ip, from_domain, block_expires, record_expires, create_time) \
    values ('${quote_mysql:${mask:$sender_host_address/24}}', '${quote_mysql:$sender_address_domain}', \
            date_add(now(), interval 4 minute), date_add(now(), interval 7 day), now())

# primary_hostname =
# qualify_domain =
# qualify_recipient =

domainlist local_domains = @ : lsearch;CONFDIR/tabs/local-domains : ${lookup mysql {MYSQL_DOMAIN}}
domainlist relay_to_domains = lsearch;CONFDIR/tabs/relay-domains
hostlist   relay_from_hosts = localhost : net-iplsearch;CONFDIR/tabs/relay-from-hosts
hostlist   ignore_dnsbl_hosts = net-iplsearch;CONFDIR/tabs/ignore-dnsbl-hosts
hostlist   host_reject = net-iplsearch;CONFDIR/tabs/host-reject

acl_smtp_rcpt = acl_check_rcpt
# acl_smtp_mime = acl_check_mime
acl_smtp_data = acl_check_content

av_scanner = clamd:/var/run/clamav/clamd.sock
# spamd_address = /var/run/clamav/sa
# av_scanner = clamd:127.0.0.1 3310
spamd_address = 127.0.0.1 783

exim_user = mailnull
exim_group = mail
never_users = root

host_lookup = *
rfc1413_hosts = *
rfc1413_query_timeout = 0s

ignore_bounce_errors_after = 1d
timeout_frozen_after = 2d
freeze_tell = postmaster

local_interfaces = LOCAL_INTERFACES
spool_directory = EXIM_SPOOL
log_file_path = EXIM_LOG/%slog

host_reject_connection = +host_reject

message_size_limit = 50M
return_size_limit = 20K
queue_run_max = 30
remote_max_parallel = 5
queue_smtp_domains = *
queue_only_load = 20
recipients_max = 150
smtp_connect_backlog = 50
smtp_accept_max = 100
smtp_accept_max_per_host = 30
smtp_accept_queue = 50

smtp_banner = "HELO_DATA ESMTP $tod_full"

trusted_users = root
admin_groups = staff
log_selector = -queue_run -retry_defer -skip_delivery +delivery_size

tls_advertise_hosts = *
# root:mail mode 640 (-rw-r-----)
tls_certificate = CONFDIR/../mail.crt
tls_privatekey = CONFDIR/../mail.key

hide mysql_servers = MYSQL_SERVERS

received_header_text = Received: \
      ${if def:sender_rcvhost {from $sender_rcvhost\n\t}\
      {${if def:sender_ident {from $sender_ident }}\
      ${if def:sender_helo_name {(helo=$sender_helo_name)\n\t}}}}\
      by HELO_DATA \
      ${if def:received_protocol {with $received_protocol}} \
      ${if def:tls_cipher {($tls_cipher)\n\t}}\
      id $message_id\
      ${if def:received_for {\n\tfor $received_for}}


######################################################################
#                       ACL CONFIGURATION                            #
#         Specifies access control lists for incoming SMTP mail      #
######################################################################

begin acl

acl_check_mail:

  accept  hosts         = +relay_from_hosts

  accept  authenticated = *

  deny    message       = $sender_host_address is not allowed to send mail from $sender_address_domain
          spf           = fail

  accept


acl_check_rcpt:

  accept  hosts = :

  deny    message       = Restricted characters in address
          domains       = +local_domains
          local_parts   = ^[.] : ^.*[@%!/|]

  deny    message       = Restricted characters in address
          domains       = !+local_domains
          local_parts   = ^[./|] : ^.*[@%!] : ^.*/\\.\\./

  accept  local_parts   = postmaster
          domains       = +local_domains

  require verify        = sender

  deny    message       = rejected because $sender_host_address is in a black list at $dnslist_domain\n$dnslist_text
         !authenticated = *
         !hosts         = +ignore_dnsbl_hosts
          dnslists      = sbl-xbl.spamhaus.org : bl.spamcop.net
                          #: dnsbl.sorbs.net

  accept  domains       = +local_domains
          authenticated = *
          endpass
          verify        = recipient
          set acl_m0    = 0

  defer   message       = the account is over quota
          condition     = ${lookup mysql {MYSQL_OVERQUOTA}{$value}}

  defer   message       = the account is over quota
          condition     = ${lookup mysql {MYSQL_OVERQ_ALIAS}{$value}}

  accept  domains       = +local_domains
          endpass
          verify        = recipient
          # acl_m0 == 1 -> disable AV checks
          # if m0 != 0 then check mysql for av_disabled, else 0, if mysql fails then 0
          set acl_m0    = ${if !eq{$acl_m0}{0} \
                             {${lookup mysql {MYSQL_AV_DISABLED}{$value}{0}}} \
                             {0} \
                           }

  accept  domains       = +relay_to_domains
          endpass
          verify        = recipient
          set acl_m0    = 0

  accept  hosts         = +relay_from_hosts
          set acl_m0    = 0

  accept  authenticated = *
          # accept if not bounce
          condition     = ${if def:sender_address}
          set acl_m0    = 0

  deny    message       = relay not permitted


acl_check_mime:

  # Decode MIME parts to disk. This will support virus scanners later.
  warn decode = default

  # File extension filtering.
  deny message = Blacklisted file extension detected
       condition = ${if match \
                        {${lc:$mime_filename}} \
                        {\N(\.exe|\.pif|\.bat|\.scr|\.lnk|\.com)$\N} \
                     {1}{0}}

  # Reject messages that carry chinese character sets.
  # WARNING: This is an EXAMPLE.
  deny message = Sorry, noone speaks chinese here
       condition = ${if eq{$mime_charset}{gb2312}{1}{0}}

  accept


acl_check_content:

  require verify = header_sender

          # accept single recipient whose AV checks has been disabled
  accept  condition = ${if eq{$acl_m0}{1}{yes}{no}}

  deny    message = This message contains malformed MIME ($demime_reason).
          demime = *
          condition = ${if >{$demime_errorlevel}{2}{1}{0}}

  deny    message = This message contains a virus or other harmful content ($malware_name).
          # skip virus check when message is larger than 2MB
          condition = ${if <{$message_size}{CLAMAV_MAX_MESSAGE_SIZE}{yes}{no}}
          demime = *
          malware = *

  accept  authenticated = *

  accept  hosts = localhost

          # skip expensive SpamAssassin check for messages larger than 200KB
  accept  condition = ${if >{$message_size}{SA_MAX_MESSAGE_SIZE}{yes}{no}}

  deny    message = This message scored $spam_score spam points. Congratulations!
          spam = nobody:true
          # 100 is score 10.0
          condition = ${if >{$spam_score_int}{100}{1}{0}}

          # add header - always, except when relaying
  warn    message = X-Spam-Score: $spam_score ($spam_bar)
         !hosts = +relay_from_hosts
          spam = nobody:true

  warn    message = X-Spam-Report: $spam_report
         !hosts = +relay_from_hosts
          spam = nobody:true
          condition = ${if ={$spam_score_int}{0}{0}{1}}

          # accept in case spam score is less than 2.0
  accept  condition = ${if <{$spam_score_int}{20}{1}{0}}

          # greylist
  warn    set acl_m1 = ${lookup mysql{MYSQL_GREYLIST_TEST}{$value}{0}}

  defer   message = Greylisted - please try again a little later.
          condition = ${if eq{$acl_m1}{0}{1}}
          condition = ${lookup mysql{MYSQL_GREYLIST_ADD}{yes}{no}}

  defer   message = Greylisted - please try again shortly.
          condition = ${if eq{$acl_m1}{1}{1}}

  accept  hosts = +relay_from_hosts

          # add spam header when spam score greater than required score
  warn    message = X-Spam-Flag: YES
          spam = nobody

  accept


######################################################################
#                      ROUTERS CONFIGURATION                         #
#               Specifies how addresses are handled                  #
######################################################################

begin routers

dnslookup:
  driver = dnslookup
  domains = ! +local_domains
  transport = remote_smtp
  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8
.ifdef SMTP_SMARTHOST
  pass_on_timeout

smarthost:
  driver = manualroute
  domains = ! +local_domains
  transport = remote_smtp_smarthost
  route_list = * SMTP_SMARTHOST byname
  host_find_failed = defer
.endif
  no_more

# The remaining routers handle addresses in the local domain(s).

system_aliases:
  driver = redirect
  allow_fail
  allow_defer
  data = ${lookup{$local_part}lsearch{/etc/aliases}}
  user = mailnull
  group = mail
  file_transport = address_file
  pipe_transport = address_pipe
  condition = ${if eq{$domain}{$primary_hostname}{yes}{no}}

global_aliases:
  driver = redirect
  allow_fail
  allow_defer
  data = ${lookup{$local_part}lsearch{CONFDIR/aliases.global}}
  user = mailnull
  group = mail
  file_transport = address_file
  pipe_transport = address_pipe

domain_aliases:
  driver = redirect
  allow_fail
  allow_defer
  require_files = CONFDIR/aliases/$domain
  data = ${lookup{$local_part}lsearch{CONFDIR/aliases/$domain}}
  user = mailnull
  group = mail
  file_transport = address_file
  pipe_transport = address_pipe

database_aliases:
  driver = redirect
  allow_fail
  allow_defer
  data = ${lookup mysql {MYSQL_ALIAS}}
  forbid_file
  forbid_pipe

spamuserbox:
  driver = accept
  require_files = IMAP_SPOOL/$local_part@$domain/.Spam
  condition = ${if match{$h_X-Spam-Flag:}{YES}{yes}{no}}
  transport = imap_spam
  no_verify
  no_expn

spambox:
  driver = redirect
  require_files = IMAP_SPOOL/spam@$domain
  condition = ${if match{$h_X-Spam-Flag:}{YES}{yes}{no}}
  data = spam@$domain
  user = dovecot
  group = dovecot
  no_verify
  no_expn

vacation:
  driver = accept
  transport = vacation_reply
  unseen
  senders = "! ^.*-request@.*:\
             ! ^owner-.*@.*:\
             ! ^postmaster@.*:\
             ! ^listmaster@.*:\
             ! ^mailer-daemon@.*:\
             ! ^root@.*"
  condition = "\
  ${if \
      or {\
          { !=    {${lookup mysql{MYSQL_VACATION_ENABLED}{$value}fail}} {1} }\
          { match {$h_precedence:}  {(?i)junk|bulk|list} }\
          { eq    {$sender_address} {}                   }\
         }\
  {no} {yes}\
  }"

imap:
  driver = accept
  condition = ${lookup mysql {MYSQL_ACCOUNT}{$value}fail}
  transport = imap
 # reply_transport = address_reply
 # pipe_transport = address_pipe
 # no_more

# The no_verify setting means that this router is skipped when Exim is
# verifying addresses. Similarly, no_expn means that this router is skipped if
# Exim is processing an EXPN command.

# The check_ancestor option means that if the forward file generates an
# address that is an ancestor of the current one, the current one gets
# passed on instead. This covers the case where A is aliased to B and B
# has a .forward file pointing to A.

# The three transports specified at the end are those that are used when
# forwarding generates a direct delivery to a file, or to a pipe, or sets
# up an auto-reply, respectively.

#userforward:
#  driver = redirect
#  check_local_user
## local_part_suffix = +* : -*
## local_part_suffix_optional
#  file = $home/.forward
## allow_filter
#  no_verify
#  no_expn
#  check_ancestor
#  file_transport = address_file
#  pipe_transport = address_pipe
#  reply_transport = address_reply
#  condition = ${if exists{$home/.forward} {yes} {no} }

localuser:
  driver = accept
  check_local_user
# local_part_suffix = +* : -*
# local_part_suffix_optional
  transport = local_delivery
  cannot_route_message = Unknown user
  condition = ${if eq{$domain}{$primary_hostname}{yes}{no}}


######################################################################
#                      TRANSPORTS CONFIGURATION                      #
######################################################################

begin transports

remote_smtp:
  driver = smtp
  interface = SMTP_OUTGOING_IP
  hosts_avoid_tls = SMTP_HOSTS_AVOID_TLS
  helo_data = HELO_DATA
.ifdef SMTP_SMARTHOST
  fallback_hosts = SMTP_SMARTHOST

remote_smtp_smarthost:
  driver = smtp
  interface = SMTP_OUTGOING_IP
  hosts_avoid_tls = SMTP_SMARTHOST
  helo_data = HELO_DATA
.endif

local_delivery:
  driver = appendfile
  file = /var/mail/$local_part
  delivery_date_add
  envelope_to_add
  return_path_add
  group = mail
  user = $local_part
  mode = 0660
  no_mode_fail_narrower
  file_must_exist

address_pipe:
  driver = pipe
  return_output

address_file:
  driver = appendfile
  delivery_date_add
  envelope_to_add
  return_path_add

address_reply:
  driver = autoreply

imap:
  driver = appendfile
  directory = IMAP_SPOOL/$local_part@$domain
  delivery_date_add
  envelope_to_add
  return_path_add
  maildir_format
  mode = 0640
  mode_fail_narrower = false
  create_directory
  quota_is_inclusive = false
  maildir_use_size_file
  quota = ${lookup mysql{select quota from accounts where account = '${quote_mysql:$local_part@$domain}'}{${value}M}}
  user = dovecot
  group = dovecot

imap_spam:
  driver = appendfile
  directory = IMAP_SPOOL/$local_part@$domain/.Spam
  delivery_date_add
  envelope_to_add
  return_path_add
  maildir_format
  mode = 0640
  mode_fail_narrower = false
  quota_is_inclusive = false
  maildir_use_size_file
  quota = ${lookup mysql{select quota from accounts where account = '${quote_mysql:$local_part@$domain}'}{${value}M}}
  user = dovecot
  group = dovecot

vacation_reply:
  driver = autoreply
  user = smmsp
 #user = mailnull
  group = mail
 #from = Autoreply System <$original_local_part@$original_domain>
  from = ${local_part}@${domain}
  to = $sender_address
  subject = Autoreply: ${sg{$rheader_subject:}{\n}{}}
  headers = "Content-Type: text/plain; charset=utf-8\nContent-Transfer-Encoding: 8bit"
 #return_message
  once = EXIM_SPOOL/vacation/${local_part}@${domain}
  once_repeat = 7d
  text = ${lookup mysql{set names utf8}{}}${lookup mysql{MYSQL_VACATION_TEXT}\
      {\
      ${if eq {$value} {} \
          {VACATION_TEXT_DEFAULT}\
          {$value}\
       }\
      }\
      {VACATION_TEXT_DEFAULT}}


######################################################################
#                      RETRY CONFIGURATION                           #
######################################################################

begin retry

# This single retry rule applies to all domains and all errors. It specifies
# retries every 15 minutes for 2 hours, then increasing retry intervals,
# starting at 1 hour and increasing each time by a factor of 1.5, up to 16
# hours, then retries every 6 hours until 4 days have passed since the first
# failed delivery.

# Address or Domain    Error       Retries
# -----------------    -----       -------

#*                      *           F,2h,15m; G,16h,1h,1.5; F,4d,6h
*                      *           F,2h,10m; F,4d,1h

######################################################################
#                      REWRITE CONFIGURATION                         #
######################################################################

begin rewrite


######################################################################
#                   AUTHENTICATION CONFIGURATION                     #
######################################################################

begin authenticators

plain:
  driver = plaintext
  public_name = PLAIN
#  server_condition = ${if eq{$3}{${lookup{$2}lsearch{/usr/local/etc/exim/tabs/smtp-auth}{$value}fail}}{yes}{no}}
  server_condition = ${if eq{$3}{${lookup mysql{MYSQL_SMTP_AUTH_PLAIN}{$value}fail}}{yes}{no}}
  server_set_id = $2

login:
  driver = plaintext
  public_name = LOGIN
  server_prompts = "Username:: : Password::"
  server_condition = ${if eq{$2}{${lookup mysql{MYSQL_SMTP_AUTH_LOGIN}{$value}fail}}{yes}{no}}
  server_set_id = $1

cram:
  driver = cram_md5
  public_name = CRAM-MD5
  server_secret = ${lookup mysql{MYSQL_SMTP_AUTH_LOGIN}{$value}fail}
  server_set_id = $1

#plain:
#  driver = plaintext
#  public_name = PLAIN
#  server_condition = \
#        ${if crypteq{$2}{${lookup mysql{SELECT crypt FROM users WHERE id='${quote_mysql:$1}'}{$value}fail}} {yes}{no}}
#  server_set_id = $1
